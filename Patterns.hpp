#pragma once
#include <Windows.h>
#include "find_pattern.hpp"

class Patterns {
public:
	inline static uintptr_t s_read_struct_address = 0;
	inline static uintptr_t s_calculate_checksum_address = 0;
	inline static uintptr_t s_read_uint8_address = 0;
	inline static uintptr_t s_read_int16_address = 0;
	inline static uintptr_t s_read_uint16_address = 0;
	inline static uintptr_t s_read_int32_address = 0;
	inline static uintptr_t s_read_uint32_address = 0;
	inline static uintptr_t s_read_single_address = 0;
	inline static uintptr_t s_read_string_address = 0;

	static bool find_patterns(HMODULE hModule) {
		s_read_struct_address = find_pattern(hModule, "44 89 ? ? ? 4C 89 ? ? ? 48 89 ? ? ? 48 89 ? ? ? 57 48 81 EC ? ? ? ? 48 C7 84 24 D8 04 00 00");
		s_calculate_checksum_address = find_pattern(hModule, "48 89 ? ? ? 48 89 ? ? ? 57 48 81 EC ? ? ? ? 48 C7 84 24 30 01 00 00 ? ? ? ? 48 8B");
		s_read_uint8_address = find_pattern(hModule, "48 89 ? ? ? 48 89 ? ? ? 48 83 EC ? 48 8B ? ? ? 48 83 38 ? 74 ? 48 8B ? ? ? 48 8B ? 48 8B ? ? ? 48 8B ? 48 8B ? 41 B8 ? ? ? ? 48 8D ? ? ? FF 50 ? EB ? 48 8B ? ? ? 48 83 78 08 ? 74 ? 48 8B ? ? ? 4C 8B ? ? 41 B8 ? ? ? ? BA ? ? ? ? 48 8D ? ? ? FF 15 ? ? ? ? EB ? C6 44 24 20 ? 48 8B ? ? ? 0F B6 ? ? ? 88 08 0F B6");
		s_read_int16_address = find_pattern(hModule, "48 89 ? ? ? 48 89 ? ? ? 48 83 EC ? 48 8B ? ? ? 48 83 38 ? 74 ? 48 8B ? ? ? 48 8B ? 48 8B ? ? ? 48 8B ? 48 8B ? 41 B8 ? ? ? ? 48 8D ? ? ? FF 50 ? EB ? 48 8B ? ? ? 48 83 78 08 ? 74 ? 48 8B ? ? ? 4C 8B ? ? 41 B8 ? ? ? ? BA ? ? ? ? 48 8D ? ? ? FF 15 ? ? ? ? EB ? 33 C0 66 89 ? ? ? 48 8B ? ? ? 0F B7 ? ? ? 66 89 ? 48 0F");
		s_read_uint16_address = find_pattern(hModule, "48 89 ? ? ? 48 89 ? ? ? 48 83 EC ? 48 8B ? ? ? 48 83 38 ? 74 ? 48 8B ? ? ? 48 8B ? 48 8B ? ? ? 48 8B ? 48 8B ? 41 B8 ? ? ? ? 48 8D ? ? ? FF 50 ? EB ? 48 8B ? ? ? 48 83 78 08 ? 74 ? 48 8B ? ? ? 4C 8B ? ? 41 B8 ? ? ? ? BA ? ? ? ? 48 8D ? ? ? FF 15 ? ? ? ? EB ? 33 C0 66 89 ? ? ? 48 8B ? ? ? 0F B7 ? ? ? 66 89 ? 0F B7");
		s_read_int32_address = find_pattern(hModule, "48 89 ? ? ? 48 89 ? ? ? 48 83 EC ? 48 8B ? ? ? 48 83 38 ? 74 ? 48 8B ? ? ? 48 8B ? 48 8B ? ? ? 48 8B ? 48 8B ? 41 B8 ? ? ? ? 48 8D ? ? ? FF 50 ? EB ? 48 8B ? ? ? 48 83 78 08 ? 74 ? 48 8B ? ? ? 4C 8B ? ? 41 B8 ? ? ? ? BA ? ? ? ? 48 8D ? ? ? FF 15 ? ? ? ? EB ? C7 44 24 20 ? ? ? ? 48 8B ? ? ? 8B 4C ? ? 89 08 48 63");
		s_read_uint32_address = find_pattern(hModule, "48 89 ? ? ? 48 89 ? ? ? 48 83 EC ? 48 8B ? ? ? 48 83 38 ? 74 ? 48 8B ? ? ? 48 8B ? 48 8B ? ? ? 48 8B ? 48 8B ? 41 B8 ? ? ? ? 48 8D ? ? ? FF 50 ? EB ? 48 8B ? ? ? 48 83 78 08 ? 74 ? 48 8B ? ? ? 4C 8B ? ? 41 B8 ? ? ? ? BA ? ? ? ? 48 8D ? ? ? FF 15 ? ? ? ? EB ? C7 44 24 20 ? ? ? ? 48 8B ? ? ? 8B 4C ? ? 89 08 8B 44");
		s_read_single_address = find_pattern(hModule, "48 89 ? ? ? 48 89 ? ? ? 48 83 EC ? 48 8B ? ? ? 48 83 38 ? 74 ? 48 8B ? ? ? 48 8B ? 48 8B ? ? ? 48 8B ? 48 8B ? 41 B8 ? ? ? ? 48 8D ? ? ? FF 50 ? EB ? 48 8B ? ? ? 48 83 78 08 ? 74 ? 48 8B ? ? ? 4C 8B ? ? 41 B8 ? ? ? ? BA ? ? ? ? 48 8D ? ? ? FF 15 ? ? ? ? EB ? 0F 57");
		s_read_string_address = find_pattern(hModule, "44 89 ? ? ? 48 89 ? ? ? 48 89 ? ? ? 57 48 81 EC ? ? ? ? 33 C0 66 89 ? ? ? 48 8B ? ? ? ? ? ? 48 83 38 ? 0F 84 ? ? ? ? 48 8B ? ? ? ? ? ? 48 8B ? 48 8B ? ? ? ? ? ? 48 8B ? 48 8B ? 41 B8 ? ? ? ? 48 8D ? ? ? FF 50 ? 0F BF ? ? ? 85 C0 7E ? 0F BF ? ? ? 3B 84 ? ? ? ? ? 7F ? 48 0F ? ? ? ? 48 D1");

		//Global has a way different pattern, look for this one in case the first fails
		if (!s_read_string_address){
			s_read_string_address = find_pattern(hModule, "44 89 ? ? ? 48 89 ? ? ? 48 89 ? ? ? 57 B8 ? ? ? ? E8 ? ? ? ? 48 2B ? 33 C0");
		}

		if (!s_read_struct_address) {
			printf("Couldn't find read struct pattern!\n");

			return false;
		}

		if (!s_calculate_checksum_address) {
			printf("Couldn't find calculate checksum pattern!\n");

			return false;
		}

		if (!s_read_uint8_address) {
			printf("Couldn't find read uint8 pattern!\n");

			return false;
		}

		if (!s_read_int16_address) {
			printf("Couldn't find read int16 pattern!\n");

			return false;
		}

		if (!s_read_uint16_address) {
			printf("Couldn't find read uint16 pattern!\n");

			return false;
		}

		if (!s_read_int32_address) {
			printf("Couldn't find read int32 pattern!\n");

			return false;
		}

		if (!s_read_uint32_address) {
			printf("Couldn't find read uint32 pattern!\n");

			return false;
		}

		if (!s_read_single_address) {
			printf("Couldn't find read single pattern!\n");

			return false;
		}

		if (!s_read_string_address) {
			printf("Couldn't find read string pattern!\n");

			return false;
		}

		return true;
	}
};